%% Partie 1 - Filtrage spatial
currentfolder = pwd;

%% E1 Rehaussement d'image

% 1)
img = imread('img1.jpg');
imgEgalized = Egalisation_Histogramme(img);
figure;
imshow(img);
title('Image Originale');

figure;
imshow(imgEgalized);
title('Histogramme Égalisé');

% 2)
gaussien = [1 2 1 2 1;2 4 8 4 2;1 8 18 8 1;2 4 8 4 2;1 2 1 2 1] * 1/90;
imgFiltreGaussien = Filtre_Gaussien(imgEgalized, gaussien);

figure;
imshow(imgFiltreGaussien);
title('Filtré Gaussien');

% 3)
delta = Filtre_Laplacien(imgFiltreGaussien);
minDelta = min(min(delta));
maxDelta = max(max(delta));

visibleDelta = uint8(((delta - minDelta)/(maxDelta - minDelta))*255);

figure;
imshow(visibleDelta);
title('Filtre Laplacien');

% 4)
K = 1.2;
gaussien = [1 2 3;2 4 2;1 2 1] * 1/16;
imgFiltreGaussien = Filtre_Gaussien(imgEgalized, gaussien);
contourRehausse = imgFiltreGaussien + K * delta;

figure;
imshow(contourRehausse);
title('contour Rehaussé');

% 5) Avec le Laplassion, on détecte les contours de l'image et avec le
% rehaussement, on accentue ces zones en augmentant les contrastes.

%% Exercice 2

% 1) 
img = imread('monnaie.png');
figure;
imshow(img);
title('Image Originale');

% 2)
seuil = 250;
binarized = Binariser(img, 250);
inverse = imcomplement(binarized);
figure;
imshow(inverse);
title('Image BInariser Complementaire');

% 3) ouverture -> fermeture

imageOuverte = imopen(inverse, strel('disk', 1));
imageFerme = imclose(imageOuverte, strel('disk', 3));

figure;
imshow(imageFerme);
title('Image BInariser Complementaire');

% 4)
valeur = CompterMonnaie(imageFerme);


%% Partie 2 - Filtrage spectrale

%% Exercice 3

% 1)

barresVerticales = imread('Barres_Verticales.png');
barresObliques = imread('Barres_Obliques.png');
barresHorizontales = imread('Barres_Horizontales.png');

figure;
imshow(barresVerticales);
title('Barres Verticales');

figure;
imshow(barresObliques);
title('Barres Obliques');

figure;
imshow(barresHorizontales);
title('Barres Horizontales');

% 2) Calcul tfd

TFDShift(barresVerticales, 'TFD Barres Verticales');

TFDShift(barresObliques, 'TFD Barres Obliques');

TFDShift(barresHorizontales, 'TFD Barres Horizontales');

% 3) 

barresVerticalesRotated = imrotate(barresVerticales, 70, 'bilinear','crop');

figure;
imshow(barresVerticalesRotated);
title('Barres Verticales tourne');

TFDShift(barresVerticalesRotated, 'TFD Barres Verticales tourne');

% 4) On peut observer une rotation identique dans le plan des fréquences.
% On remarque aussi un effet de croit, comme observé dans la TDF de l'image
% des barres Obliques.

%% Exercice 4

% 1)
houseImage = imread('NewHouse.png');
houseImageGray = rgb2gray(houseImage);

figure;
imshow(houseImageGray);
title('House Image Gray Scale');

img = TFDShift(houseImageGray, 'House Image Gray Scale TFD Shift');

HouseImageGrayTDF = fftshift(houseImageGray);

imwrite(img, 'house_grey_fft.png');
% 2)

% Les lignes Horizontales de la porte sont facile à déterminer comme les
% lignes verticales de la FFT. (centrale et les autres récurentes)

% De même, les lignes Verticaux des murs sont facile à déterminer comme
% les lignes horizontales de la FFT.

% Les formes de carré se représente sur la FFT comme des étoiles ( + ).
% (fenêtre carré)
% ceux en angles sont donc des carré avec une rotation (fenêtre en losange)

% 3) 
H = fspecial('gaussian', size(houseImageGray);
imageFiltre = imfilter(houseImageGray, H, 'replicate');
imshow(imageFiltre);



